name: CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Lint with shellcheck
      uses: ludeeus/action-shellcheck@master
      with:
        scandir: './usr/local/bin'

  test:
    runs-on: ubuntu-latest
    needs: lint
    steps:
    - uses: actions/checkout@v4
    - name: Set up test environment
      run: |
        sudo apt-get update
        sudo apt-get install -y bats
    - name: Run tests
      run: bats tests/

  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
    - uses: actions/checkout@v4
    - name: Install build dependencies
      run: sudo apt-get install -y dpkg-dev debhelper
    - name: Build Debian package
      run: dpkg-buildpackage -us -uc -b
    - name: Move Debian package
      run: mv ../connectivity-test_*.deb .
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: debian-package
        path: ./connectivity-test_*.deb

  release:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v4
    - name: Download artifact
      uses: actions/download-artifact@v4
      with:
        name: debian-package
    - name: Create Release and Upload Asset
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        gh release create v${{ github.run_number }} \
          --title "Release ${{ github.run_number }}" \
          --notes "Automated release for build ${{ github.run_number }}" \
          ./connectivity-test_*.deb
